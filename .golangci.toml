[service]
golangci-lint-version = "1.51"

[linters]
disable-all = true

enable = [
    "errcheck",
    "gosimple",
    "govet",
    "ineffassign",
    "staticcheck",
    "typecheck",
    "unused",
    "asasalint",
    "asciicheck",
    "bidichk",
    "bodyclose",
    "containedctx",
    "cyclop",
    "depguard",
    "dogsled",
    "dupl",
    "dupword",
    "durationcheck",
    "errchkjson",
    "errname",
    "errorlint",
    "execinquery",
    "exhaustive",
    "exportloopref",
    "forbidigo",
    "forcetypeassert",
    "ginkgolinter",
    "gocheckcompilerdirectives",
    "gocognit",
    "goconst",
    "gocritic",
    "gocyclo",
    "goerr113",
    "gofmt",
    "gofumpt",
    "goheader",
    "goimports",
    "gomnd",
    "gomoddirectives",
    "gomodguard",
    "goprintffuncname",
    "gosec",
    "grouper",
    "importas",
    "ireturn",
    "lll",
    "loggercheck",
    "maintidx",
    "makezero",
    "misspell",
    "musttag",
    "nakedret",
    "nestif",
    "nilerr",
    "nilnil",
    "nlreturn",
    "noctx",
    "nolintlint", 
    "nonamedreturns",
    "nosprintfhostport",
    "paralleltest",
    "prealloc",
    "predeclared",
    "promlinter",
    "reassign",
    "revive",
    #rowserrcheck is disabled because of generics. You can track the evolution of the generics support by following the https://github.com/golangci/golangci-lint/issues/2649.
    "sqlclosecheck",
    "stylecheck",
    "tagliatelle",
    "tenv",
    "testableexamples",
    "testpackage",
    "thelper",
    "tparallel",
    "unconvert",
    "unparam",
    "unused",
    "usestdlibvars",
    "varnamelen",
    #wastedassign is disabled because of generics. You can track the evolution of the generics support by following the https://github.com/golangci/golangci-lint/issues/2649
    "whitespace",
    "wrapcheck",
    "wsl",
]

[linters-settings.govet]
check-shadowing = true

[linters-settings.revive]
min-confidence = 0.1

[[issues.exclude-rules]]
path = '(.+)_test\.go'
linters = [
    "lll",
    "goerr113",
]

[[issues.exclude-rules]]
path = 'experiment/'
linters = [
    "unparam"
]